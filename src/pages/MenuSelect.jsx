import { useEffect, useState } from "react";
import { FaShoppingCart } from "react-icons/fa";
import { useNavigate, useSearchParams } from "react-router-dom";
import styled from "styled-components";
import { storeService } from "../api/service";
import BottomNav from "../components/BottomNav";
import FixedLayout from "../components/FixedLayout";
import Header from "../components/Header";

const MenuSelect = () => {
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();
  const storeId = searchParams.get('storeId');

  const defaultStore = {
    name: "Í∞ÄÍ≤å Ïù¥Î¶Ñ ÏóÜÏùå",
    location: "Ï£ºÏÜå ÏóÜÏùå",
    currentAmount: 0,
    minOrderPrice: 0,
    closeIn: "Ï†ïÎ≥¥ ÏóÜÏùå",
  };
  
  const [store, setStore] = useState(defaultStore);
  const [menus, setMenus] = useState([]);

  const fetchData = async () => {
    try {
      // Store Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
      const storeResponse = await storeService.getStore(storeId);
      if (storeResponse.success === true) {
        console.log("Store Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ ÏÑ±Í≥µ!");
        
        // Store Îç∞Ïù¥ÌÑ∞ ÌååÏã±
        const storeData = storeResponse.data;
        const parsedStore = {
          id: storeData.id,
          name: storeData.name,
          phone: storeData.phone,
          location: storeData.location,
          description: storeData.description,
          openHours: storeData.openHours,
          minOrderPrice: storeData.minOrderPrice,
          category: storeData.category,
          currentAmount: 0, // Í∏∞Î≥∏Í∞í Ï∂îÍ∞Ä
          closeIn: "Ï†ïÎ≥¥ ÏóÜÏùå" // Í∏∞Î≥∏Í∞í Ï∂îÍ∞Ä
        };
        
        // store ÏÉÅÌÉúÏóê Ï†ÄÏû•
        setStore(parsedStore);
        console.log("Store Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• ÏôÑÎ£å:", parsedStore);
        
      } else {
        alert("Store Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®");
        return; // Store Ï†ïÎ≥¥Í∞Ä ÏóÜÏúºÎ©¥ Î©îÎâ¥ÎèÑ Í∞ÄÏ†∏Ïò§ÏßÄ ÏïäÏùå
      }

      // Menu Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
      const menuResponse = await storeService.getMenus(storeId);
      if (menuResponse.success === true) { // success -> isSuccess
        console.log("Menu Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ ÏÑ±Í≥µ!");
        
        // Menu Îç∞Ïù¥ÌÑ∞ ÌååÏã±
        const menuList = menuResponse.data || [];
        const parsedMenus = menuList.map(menu => ({
          id: menu.id,
          name: menu.name,
          description: menu.description,
          price: menu.price,
          discountRate: menu.discountRate,
          discountedPrice: menu.discountedPrice,
          imageUrl: menu.imageUrl,
          options: menu.options || []
        }));
        
        // menus ÏÉÅÌÉúÏóê Ï†ÄÏû•
        setMenus(parsedMenus);
        console.log(`Menu Îç∞Ïù¥ÌÑ∞ Ï†ÄÏû• ÏôÑÎ£å: ${parsedMenus.length}Í∞ú Î©îÎâ¥`);
        
      } else {
        alert("Menu Ï†ïÎ≥¥ Î∂àÎü¨Ïò§Í∏∞ Ïã§Ìå®");
        setMenus([]); // Ïã§Ìå® Ïãú Îπà Î∞∞Ïó¥Î°ú ÏÑ§Ï†ï
      }

    } catch (error) {
      console.error('Îç∞Ïù¥ÌÑ∞ Í∞ÄÏ†∏Ïò§Í∏∞ Ï§ë Ïò§Î•ò:', error);
      alert('Îç∞Ïù¥ÌÑ∞Î•º Í∞ÄÏ†∏Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.');
      setStore(defaultStore); // null ÎåÄÏã† defaultStore
      setMenus([]);
    }
  };

  useEffect(() => {
    if (storeId) { // storeIdÍ∞Ä ÏûàÏùÑ ÎïåÎßå Ïã§Ìñâ
      fetchData();
    }
  }, [storeId]);

  // ÎÇ¥Í∞Ä Îã¥ÏùÄ Î©îÎâ¥Îßå Í≤∞Ï†úÌïòÎü¨ Í∞ÄÍ∏∞
  const handleMyOrderClick = () => {
    navigate("/order", {
      state: {
        directCheckout: true,  // ÎÇ¥ Î©îÎâ¥Îßå
        from: "menu-select"
      }
    });
  };

  // ÌåÄÏõêÎì§ Î©îÎâ¥ Ìè¨Ìï® Ï†ÑÏ≤¥ Ï£ºÎ¨∏ ÌôïÏù∏
  const handleCartClick = () => {
    navigate("/order", {
      state: {
        directCheckout: false,  // Ï†ÑÏ≤¥ Ï£ºÎ¨∏ ÎÇ¥Ïó≠
        from: "menu-select"
      }
    });
  };

  return (
    <AppWrapper>
      <FixedLayout>
        <Header title="Í∞ÄÍ≤åÎ™©Î°ù" />
        <BackButton onClick={() => navigate(-1)}>‚Üê Í∞ÄÍ≤å Î™©Î°ù</BackButton>

        <Main>
          <StoreBox>
            <StoreTitle>üìç [{store?.name || "Í∞ÄÍ≤å Ïù¥Î¶Ñ ÏóÜÏùå"}]</StoreTitle>
            <StoreInfo>{store?.location || "Ï£ºÏÜå ÏóÜÏùå"}</StoreInfo>
            <StorePrice>
              <span className="current">{(store?.currentAmount || 0).toLocaleString()}</span> / {(store?.minOrderPrice || 0).toLocaleString()}
            </StorePrice>
            <StoreTime>{store?.closeIn || "Ï†ïÎ≥¥ ÏóÜÏùå"}</StoreTime>
          </StoreBox>

          <SectionTitle>Î©îÎâ¥ Î™©Î°ù</SectionTitle>
          <MenuListContainer>
            {menus && menus.length > 0 ? (
              menus.map((menu, i) => (
                <MenuItem 
                  key={menu.id || `menu-${i}`} 
                  onClick={() => navigate('/menu-option', { state: { menu: menu, store: store } })}
                >
                  <MenuContent>
                    <MenuName>{menu.name}</MenuName>
                    <MenuDescription>{menu.description}</MenuDescription>
                    <MenuPriceInfo>
                      {menu.discountRate > 0 ? (
                        <>
                          <OriginalPrice>{menu.price.toLocaleString()}Ïõê</OriginalPrice>
                          <DiscountPrice>{menu.discountedPrice.toLocaleString()}Ïõê</DiscountPrice>
                          <DiscountBadge>{menu.discountRate}% Ìï†Ïù∏</DiscountBadge>
                        </>
                      ) : (
                        <MenuPrice>{menu.price.toLocaleString()}Ïõê</MenuPrice>
                      )}
                    </MenuPriceInfo>
                  </MenuContent>
                  {menu.imageUrl && (
                    <MenuImage src={menu.imageUrl} alt={menu.name} />
                  )}
                  <MenuArrow>‚Ä∫</MenuArrow>
                </MenuItem>
              ))
            ) : (
              <EmptyMessage>Îì±Î°ùÎêú Î©îÎâ¥Í∞Ä ÏóÜÏäµÎãàÎã§.</EmptyMessage>
            )}
          </MenuListContainer>
        </Main>

        {/* <BottomWrapper>
          <PayButton onClick={handleMyOrderClick}>Í≤∞Ï†úÌïòÍ∏∞</PayButton>
          <CartIcon onClick={handleCartClick} />
        </BottomWrapper> */}

        <BottomNav />
      </FixedLayout>
    </AppWrapper>
  );
}

export default MenuSelect;

const AppWrapper = styled.div`
  max-width: 420px;
  margin: 0 auto;
  background: #fff;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
`;

const BackButton = styled.div`
  padding: 13px;
  font-size: 16px;
  font-weight: 500;
  cursor: pointer;
`;

const Main = styled.main`
  flex: 1;
  min-height: 0;
  overflow-y: auto;
  padding: 0 20px;
`;

const StoreBox = styled.div`
  border: 1.5px solid #ccc;
  border-radius: 10px;
  background: #f5f5f5;
  padding: 10px 20px 10px 0px;
  margin-bottom: 20px;
  text-align: center;
`;

const StoreTitle = styled.div`
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 0px;
`;

const StoreInfo = styled.div`
  font-size: 1.2rem;
  font-weight: 700;
  margin-bottom: 4px;
`;

const StorePrice = styled.div`
  font-size: 1.2rem;
  font-weight: 700;
  margin: 2px 0;
  .current {
    color: #1f3993;
    font-weight: bold;
  }
`;

const StoreTime = styled.div`
  font-size: 1.2rem;
  font-weight: 700;
  margin-bottom: 4px;
`;

const SectionTitle = styled.h4`
  font-size: 1.2rem;
  margin: 16px 0 16px 0;
`;

const MenuListContainer = styled.div`
  display: flex;
  flex-direction: column;
  gap: 12px;
  margin-bottom: 20px;
`;

const MenuItem = styled.div`
  display: flex;
  align-items: center;
  padding: 16px;
  background: white;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);

  &:hover {
    background: #f8f9fa;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  &:active {
    transform: translateY(0);
    background: #e9ecef;
  }
`;

const MenuContent = styled.div`
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 4px;
`;

const MenuName = styled.div`
  font-size: 1.1rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 4px;
`;

const MenuDescription = styled.div`
  font-size: 0.9rem;
  color: #666;
  line-height: 1.3;
  margin-bottom: 8px;
`;

const MenuPriceInfo = styled.div`
  display: flex;
  align-items: center;
  gap: 8px;
  flex-wrap: wrap;
`;

const MenuPrice = styled.span`
  font-size: 1.1rem;
  font-weight: 600;
  color: #1f3993;
`;

const OriginalPrice = styled.span`
  font-size: 0.9rem;
  color: #999;
  text-decoration: line-through;
`;

const DiscountPrice = styled.span`
  font-size: 1.1rem;
  font-weight: 600;
  color: #e74c3c;
`;

const DiscountBadge = styled.span`
  background: #e74c3c;
  color: white;
  font-size: 0.8rem;
  padding: 2px 6px;
  border-radius: 4px;
  font-weight: 500;
`;

const MenuImage = styled.img`
  width: 60px;
  height: 60px;
  border-radius: 8px;
  object-fit: cover;
  margin: 0 12px;
  flex-shrink: 0;
`;

const MenuArrow = styled.div`
  font-size: 1.5rem;
  color: #ccc;
  font-weight: 300;
  flex-shrink: 0;
`;

const EmptyMessage = styled.div`
  text-align: center;
  padding: 40px 20px;
  color: #666;
  font-size: 1rem;
`;

const BottomWrapper = styled.div`
  display: flex;
  align-items: center;
  padding: 0 20px 20px;
  gap: 12px;
`;

const PayButton = styled.button`
  flex: 1;
  background: #1f3993;
  color: white;
  font-size: 1.2rem;
  font-weight: 700;
  padding: 12px;
  border: none;
  border-radius: 8px;
`;

const CartIcon = styled(FaShoppingCart)`
  font-size: 1.6rem;
  color: #1f3993;
`;